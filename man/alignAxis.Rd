% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/align_axis.R
\name{alignAxis}
\alias{alignAxis}
\title{Align to axis}
\usage{
alignAxis(l, coords)
}
\arguments{
\item{l}{A 2X3 matrix-like object containing xyz point coordiantes defining
the alignment vector, one coordinate per row.}

\item{coords}{A Nx3 matrix-like object containing xyz point coordinates, one
per row. If more than 3 columns given, the rest are ignored.}
}
\value{
A list containing rotated coordinates (coords) and the rotated
input vector (l).
}
\description{
Rotates the given coordinates so that the input vector is
aligned with the X axis, the first point at the origin and the second
at some value of x and y=0, z=0. Two rotations are performed: the
first aligns the vector with the xy plane, shifting the coordinates
accordingly, and the second aligns the vector with the x axis.
}
\note{
The output coordinate object will contain 3 columns - any additional
columns present in the input will be discarded
}
\section{TODO}{
 Replace underlying rotation algorithm with something
more sensible.
}

\examples{
library(rgl)
data(demoFlake2)
view3d(theta=0, phi=0)
axes3d()
shade3d(demoFlake2$mesh, color="green")
points3d(demoFlake2$lms[c(3,8),], color="red", size=10)
al.res <- alignAxis(demoFlake2$lms[c(3,8),], t(demoFlake2$mesh$vb))
m.rot <- list(vb=t(cbind(al.res$coords, 1)), it=demoFlake2$mesh$it)
class(m.rot) <- "mesh3d"
shade3d(m.rot, color="blue")
points3d(al.res$l, color="purple", size=10)
# Other:
t.df = data.frame(x=c(1,2,3,3, 7),
y=c(0.5,1,1.5,2, 2.5),
z=c(0.5,1,1.5,2, 2.5))
points3d(t.df)
lines3d(t.df[c(1,5),])
}
\author{
Cornel M. Pop
}
