% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/surf_c2vMap.R
\name{mapOnMesh}
\alias{mapOnMesh}
\title{Map coordinates onto a target mesh surface (nearest mesh vertex)}
\usage{
mapOnMesh(coords, mesh)
}
\arguments{
\item{coords}{a data.frame-like object with 3D coordinates (1 per row)}

\item{mesh}{a target mesh3d object}
}
\value{
A data.frame object with target vertices extracted from mesh$vb and
rownames set to the original vertex IDs
}
\description{
For a given set of arbitrary coordinates, it returns the closest
mesh vertices. This function is similar to the closemeshKD function provided
by the Morpho package, but it's simpler and runs much faster (ca. 5-10x)
}
\note{
The output may differ from input landmarks already mapped to the mesh
surface because this function returns the closest mesh vertex, not the
closest point on the mesh surface (e.g. shortest distance to a mesh face)
}
\examples{
library(Morpho)
data(demoFlake1)
alignedMesh<-pcAlign(demoFlake1$mesh)
# Note that the first coordinate is "inside" the object
coords<-data.frame(x=c(0,10,-3), y=c(0,10,3), z=c(5,10,10))
targets<-mapOnMesh(coords, alignedMesh)

require(rgl)
shade3d(alignedMesh, col="green")
points3d(coords, col="blue")
points3d(targets, col="red")
}
